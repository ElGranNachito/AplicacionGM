<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:AppGM">

    <!-- Estilo base para los botones de la aplicacion, por default no tienen fondo o borde -->
    <Style TargetType="{x:Type ButtonBase}" x:Key="BotonBase">

        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="Black"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border Padding="{TemplateBinding Padding}" 
                            Background="{TemplateBinding Background}" 
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">

                        <TextBlock 
                            Text="{TemplateBinding Content}"
                            TextAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="DimGray"/>
            </Trigger>
        </Style.Triggers>

    </Style>

    <!-- Estilo para los botones de la barra superior de la ventana -->
    <Style TargetType="{x:Type ButtonBase}" x:Key="BotonVentanaPrincipal" BasedOn="{StaticResource BotonBase}">

        <Setter Property="Padding" Value="3 0"/>
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>

        <!-- Agrandamos el boton en el eje X -->
        <!--<Setter Property="LayoutTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1.5"/>
            </Setter.Value>
        </Setter>-->

        <Setter Property="Template">
            <Setter.Value>

                <ControlTemplate TargetType="{x:Type Button}">

                    <Border Padding="{TemplateBinding Padding}" 
                            Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">

                        <TextBlock Text="{TemplateBinding Content}">
                            <TextBlock.RenderTransform>
                                <TranslateTransform Y="5"/>
                            </TextBlock.RenderTransform>
                        </TextBlock>
                    </Border>

                </ControlTemplate>

            </Setter.Value>
        </Setter>

        <Style.Triggers>

            <!-- Cuando el mouse pasa sobre el boton cambiar el color del fondo -->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="DarkGray"></Setter>
            </Trigger>

        </Style.Triggers>

    </Style>

    <!-- Estilo para el boton para cerrar la ventana principal -->
    <Style TargetType="{x:Type ButtonBase}" x:Key="BotonCerrarVentanaPrincipal" BasedOn="{StaticResource BotonVentanaPrincipal}">

        <Style.Triggers>

            <!-- Cuando el mouse pasa sobre el boton cambiar el color del fondo -->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Crimson"/>
            </Trigger>

        </Style.Triggers>

    </Style>

    <Style TargetType="{x:Type ButtonBase}" x:Key="BotonMarcoResaltable" BasedOn="{StaticResource BotonBase}">

        <Setter Property="Template">
            <Setter.Value>

                <ControlTemplate TargetType="{x:Type Button}">

                    <Border Padding="{TemplateBinding Padding}" 
                            Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            VerticalAlignment="{TemplateBinding VerticalAlignment}"
                            HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                            x:Name="border">

                        <TextBlock Text="{TemplateBinding Content}"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="Aqua"/>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>

            </Setter.Value>
        </Setter>

    </Style>

    <Style TargetType="{x:Type Button}" x:Key="BotonMenuRol" BasedOn="{StaticResource BotonBase}">

        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Padding" Value="5 10"/>

        <Setter Property="Template">
            <Setter.Value>

                <ControlTemplate TargetType="{x:Type Button}">

                    <Border Padding="{TemplateBinding Padding}" 
                            Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            VerticalAlignment="{TemplateBinding VerticalAlignment}"
                            HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                            x:Name="border">

                        <TextBlock Text="{TemplateBinding Content}" 
                                   IsHitTestVisible="False"/>

                    </Border>

                    <ControlTemplate.Triggers>

                        <MultiTrigger>

                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition SourceName="border" Property="BorderThickness" Value="0"/>
                            </MultiTrigger.Conditions>

                            <MultiTrigger.Setters>
                                <Setter TargetName="border" Property="Background" Value="Aqua"/>
                            </MultiTrigger.Setters>

                        </MultiTrigger>

                    </ControlTemplate.Triggers>

                </ControlTemplate>

            </Setter.Value>
        </Setter>

    </Style>

    <Style x:Key="BotonFondoResaltable" TargetType="{x:Type Button}" BasedOn="{StaticResource BotonBase}">

        <Style.Triggers>

            <EventTrigger RoutedEvent="MouseEnter">

                <BeginStoryboard>
                    <Storyboard
                        TargetProperty="Background.Color">

                        <ColorAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Background.Color" To="DarkGray"/>

                    </Storyboard>
                </BeginStoryboard>

            </EventTrigger>

            <EventTrigger RoutedEvent="MouseLeave">

                <BeginStoryboard>
                    <Storyboard 
                        TargetProperty="Background.Color">

                        <ColorAnimation Duration="0:0:0.2" To="Transparent"/>

                    </Storyboard>
                </BeginStoryboard>

            </EventTrigger>

        </Style.Triggers>

    </Style>

    <!-- Estilo para checkboxes que cambia el tilde por una flecha -->
    <Style TargetType="{x:Type CheckBox}" x:Key="CheckBoxDropDown">

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">

                    <!-- El unico elemento que necesitamos es un bloque de texto -->
                    <TextBlock 
                        x:Name="Texto"
                        MinWidth="30"
                        Foreground="{TemplateBinding Foreground}"
                        FontFamily="{StaticResource 'Font Awesome Regular'}"
                        Text="{StaticResource Fa-FlechaDerecha-Chevron}"/>

                    <ControlTemplate.Triggers>

                        <!-- Cuando el cursor este sobre el control el fondo cambia de color -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.Setters>
                                <Setter TargetName="Texto" Property="Background" 
                                        Value="#88A9A9A9"></Setter>
                            </Trigger.Setters>
                        </Trigger>

                        <!-- Cuando el usuario presiona la flecha esta pasa a apuntar hacia abajo -->
                        <Trigger Property="IsChecked" Value="True">
                            <Trigger.Setters>
                                <Setter TargetName="Texto" Property="Text" 
                                        Value="{StaticResource Fa-FlechaAbajo-Chevron}"/>
                            </Trigger.Setters>
                        </Trigger>

                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

</ResourceDictionary>