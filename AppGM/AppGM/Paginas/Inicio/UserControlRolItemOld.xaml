<UserControl x:Class="AppGM.UserControlRolItemOld"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:AppGM"
             xmlns:core="clr-namespace:AppGM.Core;assembly=AppGM.Core"
             mc:Ignorable="d" 
             d:DesignHeight="80" d:DesignWidth="300"
             Height="80" Width="280">

    <UserControl.Template>
        <ControlTemplate TargetType="{x:Type UserControl}">
            
            <!-- Grid con attached property que llama un comando del view model cuando el mouse esta sobre el elemento y
            otra que llame a un comando cuando el mouse deja de estar sobre el elemento -->
            <Grid
                local:ParametroComandoOnLeaveProperty.Parametro="{Binding ComandoMouseLeave}"
                  local:LlamarComandoOnMouseEnterProperty.Value="{Binding ComandoMouseEnter}">

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <!-- Grid con attached property que llama un comando del view model cuando el mouse deja de estar sobre el elemento -->
                <Border x:Name="contenido" Background="White"
                        Padding="5 10">
                    <Grid>
                        <StackPanel>
                            <TextBlock Text="{Binding ModeloRol.Nombre}"/>
                            <TextBlock Text="{Binding ModeloRol.Descripcion}" TextTrimming="WordEllipsis"/>
                            <TextBlock Text="{Binding ModeloRol.FechaUltimaSesion}"
                                       Margin="0 5 0 0"/>
                        </StackPanel>
                    </Grid>
                </Border>

                <!-- Flecha lateral derecha -->
                <Path x:Name="path"
                      Visibility="Hidden"
                      Grid.Column="1" 
                      HorizontalAlignment="Right"
                      Data="M0 0 15 40 0 80"
                      Fill="White"/>

                <!-- Binding a un comando del view model que se ejecuta cuando el elemento es clickeado -->
                <Grid.InputBindings>
                    <MouseBinding MouseAction="LeftClick" 
                                  Command="{Binding ComandoClickeado}"/>
                </Grid.InputBindings>

            </Grid>

            <!-- Cuando el mouse esta sobre el control cambiar el color de fondo del border, el fill
            del path y lo hace visible-->
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter TargetName="contenido" Property="Background" Value="LightGray"/>
                    <Setter TargetName="path" Property="Fill" Value="LightGray"/>
                    <Setter TargetName="path" Property="Visibility" Value="Visible"/>
                </Trigger>
            </ControlTemplate.Triggers>

            </ControlTemplate>

    </UserControl.Template>
</UserControl>
