// <auto-generated />
using System;
using AppGM.Core;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AppGM.Core.Migrations
{
    [DbContext(typeof(RolContext))]
    [Migration("20211113124224_inicial")]
    partial class inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.11");

            modelBuilder.Entity("AppGM.Core.ModeloAccion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ConsumeTurno")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(2000)
                        .HasColumnType("TEXT");

                    b.Property<bool>("EsValido")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ParticipanteId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TipoAccion")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ParticipanteId");

                    b.ToTable("Acciones");
                });

            modelBuilder.Entity("AppGM.Core.ModeloAdministradorDeCombate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("EsValido")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("EstaActivo")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IndicePersonajeTurnoActual")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int?>("RolId")
                        .HasColumnType("INTEGER");

                    b.Property<uint>("TurnoActual")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("RolId");

                    b.ToTable("Combates");
                });

            modelBuilder.Entity("AppGM.Core.ModeloAlianza", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<int>("EIconoAlianza")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("EsValido")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("EsVigente")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FormatoImagen")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("PathImagenIcono")
                        .HasColumnType("varchar(260)");

                    b.HasKey("Id");

                    b.ToTable("ModeloAlianza");
                });

            modelBuilder.Entity("AppGM.Core.ModeloAmbiente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CantidadCasillas")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CaracteristicasAmbiente")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("EsValido")
                        .HasColumnType("INTEGER");

                    b.Property<float>("HumedadActual")
                        .HasColumnType("REAL");

                    b.Property<int?>("IdCombateAlQuePertenece")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdMapa")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("IdRol")
                        .HasColumnType("INTEGER");

                    b.Property<float>("TemperaturaActual")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("IdCombateAlQuePertenece")
                        .IsUnique();

                    b.HasIndex("IdMapa")
                        .IsUnique();

                    b.HasIndex("IdRol")
                        .IsUnique();

                    b.ToTable("ModeloAmbiente");
                });

            modelBuilder.Entity("AppGM.Core.ModeloCaracteristicas", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Afinidad")
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<int>("Arquetipo")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Edad")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("EsValido")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Estatura")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Fisico")
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<int>("IdPersonaje")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ManoDominante")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ModeloPersonajeJugableId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nacionalidad")
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.Property<string>("Origen")
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.Property<int>("Peso")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Sexo")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("IdPersonaje");

                    b.ToTable("ModeloCaracteristicas");
                });

            modelBuilder.Entity("AppGM.Core.ModeloClimaHorario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Clima")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DiaSemana")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("EsValido")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Humedad")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("IdRol")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Temperatura")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Viento")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("IdRol")
                        .IsUnique();

                    b.ToTable("ModeloClimaHorario");
                });

            modelBuilder.Entity("AppGM.Core.ModeloContrato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<bool>("EsValido")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("EsVigente")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("IdAlianza")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("IdAlianza")
                        .IsUnique();

                    b.ToTable("ModeloContrato");
                });

            modelBuilder.Entity("AppGM.Core.ModeloDatosArma", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("EsValido")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IDItem")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IgnoraDefensa")
                        .HasColumnType("INTEGER");

                    b.Property<int>("NumeroDeCargadores")
                        .HasColumnType("INTEGER");

                    b.Property<int>("NumeroDeMunicionesPorCargador")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("TieneMunicion")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TiposDeDañoQueInflige")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("IDItem")
                        .IsUnique();

                    b.ToTable("ModeloDatosArma");
                });

            modelBuilder.Entity("AppGM.Core.ModeloDatosConsumible", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("EsValido")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IDItem")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UsosRestantes")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UsosTotales")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("IDItem")
                        .IsUnique();

                    b.ToTable("ModeloDatosConsumible");
                });

            modelBuilder.Entity("AppGM.Core.ModeloDatosDefensivo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("EsValido")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EstrategiasDeDeteccionDeDañoUtilizadas")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IDItem")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("IDItem")
                        .IsUnique();

                    b.ToTable("ModeloDatosDefensivo");
                });

            modelBuilder.Entity("AppGM.Core.ModeloDatosInvocacionBase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("EsValido")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdInvocacion")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("IdInvocacion")
                        .IsUnique();

                    b.ToTable("ModeloDatosInvocacionBase");
                });

            modelBuilder.Entity("AppGM.Core.ModeloDatosReduccionDeDaño", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("EsValido")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EstrategiaDeDeteccionDeDaño")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MetodoDeReduccionDeDaño")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ModeloDatosDefensivoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("NivelDeLaMagiaCuyoDañoReduce")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RangoDelDañoQueReduce")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TipoDeDañoQueReduce")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("ValorReduccion")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ModeloDatosDefensivoId");

                    b.ToTable("ModeloDatosReduccionDeDaño");
                });

            modelBuilder.Entity("AppGM.Core.ModeloEfecto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ComportamientoAcumulativo")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<bool>("EsValido")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("HabilidadContenedoraId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ItemContenedorId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int>("Tipo")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TurnosDeDuracion")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("HabilidadContenedoraId");

                    b.HasIndex("ItemContenedorId");

                    b.ToTable("ModeloEfecto");
                });

            modelBuilder.Entity("AppGM.Core.ModeloEfectoSiendoAplicado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ComportamientoAcumulativo")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ContadorAcumulaciones")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("EfectoId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("EsValido")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("EstaSiendoAplicado")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("InstigadorId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ObjetivoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TurnosRestantes")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("EfectoId");

                    b.HasIndex("InstigadorId");

                    b.HasIndex("ObjetivoId");

                    b.ToTable("ModeloEfectoSiendoAplicado");
                });

            modelBuilder.Entity("AppGM.Core.ModeloEspecialidad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("EsValido")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int?>("PersonajeContenedorId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PersonajeContenedorId");

                    b.ToTable("ModeloEspecialidad");
                });

            modelBuilder.Entity("AppGM.Core.ModeloFuenteDeDaño", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("EsValido")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ModeloDatosReduccionDeDañoId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NombreFuente")
                        .HasColumnType("TEXT");

                    b.Property<int?>("RolAlQuePerteneceId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TiposDeDaño")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ModeloDatosReduccionDeDañoId");

                    b.HasIndex("RolAlQuePerteneceId");

                    b.ToTable("ModeloFuenteDeDaño");
                });

            modelBuilder.Entity("AppGM.Core.ModeloFuncion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("EsValido")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NombreFuncion")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ModeloFuncion");

                    b.HasDiscriminator<string>("Discriminator").HasValue("ModeloFuncion");
                });

            modelBuilder.Entity("AppGM.Core.ModeloHabilidad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CostoDeMana")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CostoDeOdOPrana")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(2000)
                        .HasColumnType("TEXT");

                    b.Property<int?>("DueñoId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("EsValido")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IgnoraAmbiente")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ModeloPersonajeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int>("Rango")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Tipo")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TipoDeHabilidad")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TurnosDeDuracion")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("DueñoId");

                    b.HasIndex("ModeloPersonajeId");

                    b.ToTable("ModeloHabilidad");

                    b.HasDiscriminator<int>("Tipo").HasValue(1);
                });

            modelBuilder.Entity("AppGM.Core.ModeloItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descripcion")
                        .HasColumnType("TEXT");

                    b.Property<bool>("EsValido")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("EspacioQueOcupa")
                        .HasColumnType("TEXT");

                    b.Property<int>("Estado")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EstadoPortacion")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .HasColumnType("TEXT");

                    b.Property<int?>("PersonajePortadorId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Peso")
                        .HasColumnType("TEXT");

                    b.Property<int?>("RolAlQuePerteneceId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TipoItem")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PersonajePortadorId");

                    b.HasIndex("RolAlQuePerteneceId");

                    b.ToTable("ModeloItem");
                });

            modelBuilder.Entity("AppGM.Core.ModeloMapa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CombateAlQuePerteneceId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EFormatoImagen")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("EsValido")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NombreMapa")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int?>("RolId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("RutaAbsolutaImagen")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CombateAlQuePerteneceId");

                    b.HasIndex("RolId");

                    b.ToTable("ModeloMapa");
                });

            modelBuilder.Entity("AppGM.Core.ModeloParteDelCuerpo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("EsValido")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdSlotDueño")
                        .HasColumnType("INTEGER");

                    b.Property<float>("MultiplicadorDeEstaParte")
                        .HasColumnType("REAL");

                    b.Property<string>("Nombre")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int?>("PersonajeContenedorId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("IdSlotDueño")
                        .IsUnique();

                    b.HasIndex("PersonajeContenedorId");

                    b.ToTable("ParteDelCuerpo");
                });

            modelBuilder.Entity("AppGM.Core.ModeloParticipante", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AccionesRealizadasEnTurno")
                        .HasColumnType("INTEGER");

                    b.Property<int>("AccionesRestantes")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CombateActualId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("EsSuTurno")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("EsValido")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("PersonajeId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TiradaIniciativa")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TotalAccionesPorTurno")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CombateActualId");

                    b.HasIndex("PersonajeId");

                    b.ToTable("ModeloParticipante");
                });

            modelBuilder.Entity("AppGM.Core.ModeloPersonaje", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Agi")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Clase")
                        .HasColumnType("INTEGER");

                    b.Property<int>("End")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("EsValido")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("EstaEnCombate")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FormatoImagen")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Hp")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Int")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Lck")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MaxHp")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int>("NumeroParty")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PathImagenAbsoluto")
                        .HasColumnType("varchar(260)");

                    b.Property<string>("PathImagenRelativo")
                        .HasColumnType("varchar(260)");

                    b.Property<decimal>("PesoCargado")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("PesoMaximoCargable")
                        .HasColumnType("TEXT");

                    b.Property<int?>("PosicionId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("RolId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Str")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TipoPersonaje")
                        .HasColumnType("INTEGER");

                    b.Property<int>("VentajaAgi")
                        .HasColumnType("INTEGER");

                    b.Property<int>("VentajaEnd")
                        .HasColumnType("INTEGER");

                    b.Property<int>("VentajaInt")
                        .HasColumnType("INTEGER");

                    b.Property<int>("VentajaLck")
                        .HasColumnType("INTEGER");

                    b.Property<int>("VentajaStr")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PosicionId");

                    b.HasIndex("RolId");

                    b.ToTable("ModeloPersonaje");

                    b.HasDiscriminator<int>("Clase").HasValue(3);
                });

            modelBuilder.Entity("AppGM.Core.ModeloRol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CondicionClimatica")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(3500)
                        .HasColumnType("TEXT");

                    b.Property<ushort>("Dia")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("EsValido")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("FechaUltimaSesion")
                        .HasColumnType("TEXT");

                    b.Property<int>("Hora")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Registros")
                        .HasMaxLength(4000)
                        .HasColumnType("TEXT");

                    b.Property<int>("Temporada")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("ModeloRol");
                });

            modelBuilder.Entity("AppGM.Core.ModeloSlot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("EsValido")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("EspacioTotal")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ItemDueñoId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NombreSlot")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int?>("ParteDelCuerpoDueñaId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("PersonajeContenedorId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ItemDueñoId");

                    b.HasIndex("ParteDelCuerpoDueñaId");

                    b.HasIndex("PersonajeContenedorId");

                    b.ToTable("ModeloSlot");
                });

            modelBuilder.Entity("AppGM.Core.ModeloTiradaBase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<bool>("EsValido")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("FuncionContenedoraId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("HabilidadContenedoraId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ItemContenedorId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ModeloHabilidadId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MultiplicadorDeEspecialidad")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("PersonajeContenedorId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Tipo")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TipoTirada")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("FuncionContenedoraId");

                    b.HasIndex("HabilidadContenedoraId");

                    b.HasIndex("ItemContenedorId");

                    b.HasIndex("ModeloHabilidadId");

                    b.HasIndex("PersonajeContenedorId");

                    b.ToTable("Tirada");

                    b.HasDiscriminator<int>("Tipo");
                });

            modelBuilder.Entity("AppGM.Core.ModeloUnidadMapa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ETipoUnidad")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("EsValido")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("MapaId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("PersonajeId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("PosicionId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Tipo")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("MapaId");

                    b.HasIndex("PersonajeId");

                    b.HasIndex("PosicionId");

                    b.ToTable("UnidadesMapa");

                    b.HasDiscriminator<int>("Tipo").HasValue(1);
                });

            modelBuilder.Entity("AppGM.Core.ModeloVariableBase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("DescripcionVariable")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<bool>("EsValido")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("FuncionContenedoraId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("HabilidadContenedoraId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IDVariable")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ItemContenedorId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NombreVariable")
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("PersonajeContenedorId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Tipo")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TipoVariableString")
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("FuncionContenedoraId");

                    b.HasIndex("HabilidadContenedoraId");

                    b.HasIndex("ItemContenedorId");

                    b.HasIndex("PersonajeContenedorId");

                    b.ToTable("ModeloVariable");

                    b.HasDiscriminator<int>("Tipo");
                });

            modelBuilder.Entity("AppGM.Core.ModeloVector2", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("EsValido")
                        .HasColumnType("INTEGER");

                    b.Property<double>("X")
                        .HasColumnType("REAL");

                    b.Property<double>("Y")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("Vectores2");
                });

            modelBuilder.Entity("AppGM.Core.TIEfectoSiendoAplicadoFuncion", b =>
                {
                    b.Property<int>("IdFuncion")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdEfectoSiendoAplicado")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TipoFuncion")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdFuncion", "IdEfectoSiendoAplicado");

                    b.HasIndex("IdEfectoSiendoAplicado");

                    b.ToTable("TIEfectoSiendoAplicadoFuncion");
                });

            modelBuilder.Entity("AppGM.Core.TIFuncionEfecto", b =>
                {
                    b.Property<int>("IDFuncion")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IDEfecto")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PropositoFuncionRelacion")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TipoFuncion")
                        .HasColumnType("INTEGER");

                    b.HasKey("IDFuncion", "IDEfecto");

                    b.HasIndex("IDEfecto");

                    b.HasIndex("IDFuncion")
                        .IsUnique();

                    b.ToTable("TIFuncionEfecto");
                });

            modelBuilder.Entity("AppGM.Core.TIFuncionHabilidad", b =>
                {
                    b.Property<int>("IDFuncion")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IDHabilidad")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PropositoFuncionRelacion")
                        .HasColumnType("INTEGER");

                    b.HasKey("IDFuncion", "IDHabilidad");

                    b.HasIndex("IDFuncion")
                        .IsUnique();

                    b.HasIndex("IDHabilidad");

                    b.ToTable("TIFuncionHabilidad");
                });

            modelBuilder.Entity("AppGM.Core.TIFuncionHandlerEvento<AppGM.Core.ModeloEfecto>", b =>
                {
                    b.Property<int>("IdFuncion")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdOtro")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NombresEventosVinculados")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.HasKey("IdFuncion", "IdOtro");

                    b.HasIndex("IdOtro");

                    b.ToTable("TIFuncionHandlerEvento<ModeloEfecto>");
                });

            modelBuilder.Entity("AppGM.Core.TIFuncionHandlerEvento<AppGM.Core.ModeloHabilidad>", b =>
                {
                    b.Property<int>("IdFuncion")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdOtro")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NombresEventosVinculados")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.HasKey("IdFuncion", "IdOtro");

                    b.HasIndex("IdOtro");

                    b.ToTable("TIFuncionHandlerEvento<ModeloHabilidad>");
                });

            modelBuilder.Entity("AppGM.Core.TIFuncionHandlerEvento<AppGM.Core.ModeloItem>", b =>
                {
                    b.Property<int>("IdFuncion")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdOtro")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NombresEventosVinculados")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.HasKey("IdFuncion", "IdOtro");

                    b.HasIndex("IdOtro");

                    b.ToTable("TIFuncionHandlerEvento<ModeloItem>");
                });

            modelBuilder.Entity("AppGM.Core.TIFuncionHandlerEvento<AppGM.Core.ModeloPersonaje>", b =>
                {
                    b.Property<int>("IdFuncion")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdOtro")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NombresEventosVinculados")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.HasKey("IdFuncion", "IdOtro");

                    b.HasIndex("IdOtro");

                    b.ToTable("TIFuncionHandlerEvento<ModeloPersonaje>");
                });

            modelBuilder.Entity("AppGM.Core.TIFuncionItem", b =>
                {
                    b.Property<int>("IDFuncion")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IDItem")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PropositoFuncionRelacion")
                        .HasColumnType("INTEGER");

                    b.HasKey("IDFuncion", "IDItem");

                    b.HasIndex("IDFuncion")
                        .IsUnique();

                    b.HasIndex("IDItem");

                    b.ToTable("TIFuncionItem");
                });

            modelBuilder.Entity("AppGM.Core.TIFuncionPadreFuncion", b =>
                {
                    b.Property<int>("IDPadre")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IDFuncion")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("PadreId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PropositoFuncionRelacion")
                        .HasColumnType("INTEGER");

                    b.HasKey("IDPadre", "IDFuncion");

                    b.HasIndex("IDFuncion")
                        .IsUnique();

                    b.HasIndex("PadreId");

                    b.ToTable("TIFuncionPadreFuncion");
                });

            modelBuilder.Entity("ModeloAlianzaModeloPersonaje", b =>
                {
                    b.Property<int>("AlianzasId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PersonajesAfectadosId")
                        .HasColumnType("INTEGER");

                    b.HasKey("AlianzasId", "PersonajesAfectadosId");

                    b.HasIndex("PersonajesAfectadosId");

                    b.ToTable("ModeloAlianzaModeloPersonaje");
                });

            modelBuilder.Entity("ModeloContratoModeloPersonaje", b =>
                {
                    b.Property<int>("ContratosId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PersonajesAfectadosId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ContratosId", "PersonajesAfectadosId");

                    b.HasIndex("PersonajesAfectadosId");

                    b.ToTable("ModeloContratoModeloPersonaje");
                });

            modelBuilder.Entity("ModeloDatosArmaModeloFuenteDeDaño", b =>
                {
                    b.Property<int>("FuentesDeDañoQueAbarcaEsteArmaId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ItemsAbarcadosId")
                        .HasColumnType("INTEGER");

                    b.HasKey("FuentesDeDañoQueAbarcaEsteArmaId", "ItemsAbarcadosId");

                    b.HasIndex("ItemsAbarcadosId");

                    b.ToTable("ModeloDatosArmaModeloFuenteDeDaño");
                });

            modelBuilder.Entity("ModeloItemModeloSlot", b =>
                {
                    b.Property<int>("ItemsAlmacenadosId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SlotsQueOcupaId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ItemsAlmacenadosId", "SlotsQueOcupaId");

                    b.HasIndex("SlotsQueOcupaId");

                    b.ToTable("ModeloItemModeloSlot");
                });

            modelBuilder.Entity("AppGM.Core.ModeloFuncion_HandlerEvento", b =>
                {
                    b.HasBaseType("AppGM.Core.ModeloFuncion");

                    b.Property<string>("TipoHandlerString")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("ModeloFuncion_HandlerEvento");
                });

            modelBuilder.Entity("AppGM.Core.ModeloMagia", b =>
                {
                    b.HasBaseType("AppGM.Core.ModeloHabilidad");

                    b.Property<bool>("EsParticular")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ModeloPersonajeId1")
                        .HasColumnType("INTEGER");

                    b.Property<byte>("Nivel")
                        .HasColumnType("INTEGER");

                    b.HasIndex("ModeloPersonajeId1");

                    b.HasDiscriminator().HasValue(3);
                });

            modelBuilder.Entity("AppGM.Core.ModeloNoblePhantasm", b =>
                {
                    b.HasBaseType("AppGM.Core.ModeloHabilidad");

                    b.Property<int?>("ModeloServantId")
                        .HasColumnType("INTEGER");

                    b.HasIndex("ModeloServantId");

                    b.HasDiscriminator().HasValue(4);
                });

            modelBuilder.Entity("AppGM.Core.ModeloPerk", b =>
                {
                    b.HasBaseType("AppGM.Core.ModeloHabilidad");

                    b.Property<int?>("ModeloPersonajeId1")
                        .HasColumnType("INTEGER")
                        .HasColumnName("ModeloPerk_ModeloPersonajeId1");

                    b.HasIndex("ModeloPersonajeId1");

                    b.HasDiscriminator().HasValue(2);
                });

            modelBuilder.Entity("AppGM.Core.ModeloInvocacion", b =>
                {
                    b.HasBaseType("AppGM.Core.ModeloPersonaje");

                    b.Property<bool>("EsAutomata")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("InvocadorId")
                        .HasColumnType("INTEGER");

                    b.HasIndex("InvocadorId");

                    b.HasDiscriminator().HasValue(2);
                });

            modelBuilder.Entity("AppGM.Core.ModeloPersonajeJugable", b =>
                {
                    b.HasBaseType("AppGM.Core.ModeloPersonaje");

                    b.Property<int>("ClaseServant")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NombreReal")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<ushort>("RangoHechiceria")
                        .HasColumnType("INTEGER");

                    b.HasDiscriminator().HasValue(1);
                });

            modelBuilder.Entity("AppGM.Core.ModeloTiradaStat", b =>
                {
                    b.HasBaseType("AppGM.Core.ModeloTiradaBase");

                    b.Property<int>("StatDeLaQueDepende")
                        .HasColumnType("INTEGER");

                    b.HasDiscriminator().HasValue(2);
                });

            modelBuilder.Entity("AppGM.Core.ModeloTiradaVariable", b =>
                {
                    b.HasBaseType("AppGM.Core.ModeloTiradaBase");

                    b.Property<string>("DescripcionVariableExtra")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("Tirada")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue(1);
                });

            modelBuilder.Entity("AppGM.Core.ModeloUnidadMapaMasterServant", b =>
                {
                    b.HasBaseType("AppGM.Core.ModeloUnidadMapa");

                    b.Property<int>("EClaseServant")
                        .HasColumnType("INTEGER");

                    b.HasDiscriminator().HasValue(2);
                });

            modelBuilder.Entity("AppGM.Core.ModeloVariableFloat", b =>
                {
                    b.HasBaseType("AppGM.Core.ModeloVariableBase");

                    b.Property<float>("ValorVariable")
                        .HasColumnType("REAL");

                    b.HasDiscriminator().HasValue(2);
                });

            modelBuilder.Entity("AppGM.Core.ModeloVariableInt", b =>
                {
                    b.HasBaseType("AppGM.Core.ModeloVariableBase");

                    b.Property<int>("ValorVariable")
                        .HasColumnType("INTEGER")
                        .HasColumnName("ModeloVariableInt_ValorVariable");

                    b.HasDiscriminator().HasValue(1);
                });

            modelBuilder.Entity("AppGM.Core.ModeloVariableString", b =>
                {
                    b.HasBaseType("AppGM.Core.ModeloVariableBase");

                    b.Property<string>("ValorVariable")
                        .HasColumnType("TEXT")
                        .HasColumnName("ModeloVariableString_ValorVariable");

                    b.HasDiscriminator().HasValue(3);
                });

            modelBuilder.Entity("AppGM.Core.ModeloInvocacionCondicionada", b =>
                {
                    b.HasBaseType("AppGM.Core.ModeloInvocacion");

                    b.HasDiscriminator().HasValue(4);
                });

            modelBuilder.Entity("AppGM.Core.ModeloInvocacionTemporal", b =>
                {
                    b.HasBaseType("AppGM.Core.ModeloInvocacion");

                    b.Property<byte>("TurnosDeDuracion")
                        .HasColumnType("INTEGER");

                    b.HasDiscriminator().HasValue(5);
                });

            modelBuilder.Entity("AppGM.Core.ModeloMaster", b =>
                {
                    b.HasBaseType("AppGM.Core.ModeloPersonajeJugable");

                    b.Property<string>("Afinidad")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int>("Chr")
                        .HasColumnType("INTEGER");

                    b.Property<ushort>("CommandSpells")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EBienestar")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Lore")
                        .HasMaxLength(5000)
                        .HasColumnType("TEXT");

                    b.Property<int>("Mana")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ManaActual")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Od")
                        .HasColumnType("INTEGER");

                    b.Property<int>("OdActual")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Origen")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<ushort>("VentajaChr")
                        .HasColumnType("INTEGER");

                    b.HasDiscriminator().HasValue(6);
                });

            modelBuilder.Entity("AppGM.Core.ModeloServant", b =>
                {
                    b.HasBaseType("AppGM.Core.ModeloPersonajeJugable");

                    b.Property<string>("Fuente")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int>("Prana")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PranaActual")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RangoNP")
                        .HasColumnType("INTEGER");

                    b.HasDiscriminator().HasValue(7);
                });

            modelBuilder.Entity("AppGM.Core.ModeloTiradaDeDaño", b =>
                {
                    b.HasBaseType("AppGM.Core.ModeloTiradaVariable");

                    b.Property<int>("TipoDeDaño")
                        .HasColumnType("INTEGER");

                    b.HasDiscriminator().HasValue(3);
                });

            modelBuilder.Entity("AppGM.Core.ModeloUnidadMapaInvocacionTrampa", b =>
                {
                    b.HasBaseType("AppGM.Core.ModeloUnidadMapaMasterServant");

                    b.Property<int>("Cantidad")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("EsDeMaster")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Inicial")
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)");

                    b.HasDiscriminator().HasValue(3);
                });

            modelBuilder.Entity("AppGM.Core.ModeloAccion", b =>
                {
                    b.HasOne("AppGM.Core.ModeloParticipante", "Participante")
                        .WithMany("AccionesRealizadas")
                        .HasForeignKey("ParticipanteId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Participante");
                });

            modelBuilder.Entity("AppGM.Core.ModeloAdministradorDeCombate", b =>
                {
                    b.HasOne("AppGM.Core.ModeloRol", "Rol")
                        .WithMany("Combates")
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("AppGM.Core.ModeloAmbiente", b =>
                {
                    b.HasOne("AppGM.Core.ModeloAdministradorDeCombate", "CombateAlQuePertenece")
                        .WithOne("AmbienteDelCombate")
                        .HasForeignKey("AppGM.Core.ModeloAmbiente", "IdCombateAlQuePertenece")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AppGM.Core.ModeloMapa", "MapaDelAmbiente")
                        .WithOne("Ambiente")
                        .HasForeignKey("AppGM.Core.ModeloAmbiente", "IdMapa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppGM.Core.ModeloRol", "RolAlQuePertenece")
                        .WithOne("AmbienteGlobal")
                        .HasForeignKey("AppGM.Core.ModeloAmbiente", "IdRol")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("CombateAlQuePertenece");

                    b.Navigation("MapaDelAmbiente");

                    b.Navigation("RolAlQuePertenece");
                });

            modelBuilder.Entity("AppGM.Core.ModeloCaracteristicas", b =>
                {
                    b.HasOne("AppGM.Core.ModeloPersonajeJugable", null)
                        .WithOne("Caracteristicas")
                        .HasForeignKey("AppGM.Core.ModeloCaracteristicas", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppGM.Core.ModeloPersonajeJugable", "Personaje")
                        .WithMany()
                        .HasForeignKey("IdPersonaje")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Personaje");
                });

            modelBuilder.Entity("AppGM.Core.ModeloClimaHorario", b =>
                {
                    b.HasOne("AppGM.Core.ModeloRol", "RolAlQuePertenece")
                        .WithOne("ClimaHorarioGlobal")
                        .HasForeignKey("AppGM.Core.ModeloClimaHorario", "IdRol")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("RolAlQuePertenece");
                });

            modelBuilder.Entity("AppGM.Core.ModeloContrato", b =>
                {
                    b.HasOne("AppGM.Core.ModeloAlianza", "Alianza")
                        .WithOne("ContratoDeAlianza")
                        .HasForeignKey("AppGM.Core.ModeloContrato", "IdAlianza")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Alianza");
                });

            modelBuilder.Entity("AppGM.Core.ModeloDatosArma", b =>
                {
                    b.HasOne("AppGM.Core.ModeloItem", "Item")
                        .WithOne("DatosArma")
                        .HasForeignKey("AppGM.Core.ModeloDatosArma", "IDItem")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");
                });

            modelBuilder.Entity("AppGM.Core.ModeloDatosConsumible", b =>
                {
                    b.HasOne("AppGM.Core.ModeloItem", "Item")
                        .WithOne("DatosConsumible")
                        .HasForeignKey("AppGM.Core.ModeloDatosConsumible", "IDItem")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");
                });

            modelBuilder.Entity("AppGM.Core.ModeloDatosDefensivo", b =>
                {
                    b.HasOne("AppGM.Core.ModeloItem", "Item")
                        .WithOne("DatosDefensivo")
                        .HasForeignKey("AppGM.Core.ModeloDatosDefensivo", "IDItem")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");
                });

            modelBuilder.Entity("AppGM.Core.ModeloDatosInvocacionBase", b =>
                {
                    b.HasOne("AppGM.Core.ModeloInvocacion", "Invocacion")
                        .WithOne("DatosInvocacion")
                        .HasForeignKey("AppGM.Core.ModeloDatosInvocacionBase", "IdInvocacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Invocacion");
                });

            modelBuilder.Entity("AppGM.Core.ModeloDatosReduccionDeDaño", b =>
                {
                    b.HasOne("AppGM.Core.ModeloDatosDefensivo", null)
                        .WithMany("ReduccionesDeDaños")
                        .HasForeignKey("ModeloDatosDefensivoId");
                });

            modelBuilder.Entity("AppGM.Core.ModeloEfecto", b =>
                {
                    b.HasOne("AppGM.Core.ModeloHabilidad", "HabilidadContenedora")
                        .WithMany("Efectos")
                        .HasForeignKey("HabilidadContenedoraId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AppGM.Core.ModeloItem", "ItemContenedor")
                        .WithMany("Efectos")
                        .HasForeignKey("ItemContenedorId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("HabilidadContenedora");

                    b.Navigation("ItemContenedor");
                });

            modelBuilder.Entity("AppGM.Core.ModeloEfectoSiendoAplicado", b =>
                {
                    b.HasOne("AppGM.Core.ModeloEfecto", "Efecto")
                        .WithMany("Aplicaciones")
                        .HasForeignKey("EfectoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AppGM.Core.ModeloPersonaje", "Instigador")
                        .WithMany()
                        .HasForeignKey("InstigadorId");

                    b.HasOne("AppGM.Core.ModeloPersonaje", "Objetivo")
                        .WithMany("EfectosAplicandose")
                        .HasForeignKey("ObjetivoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Efecto");

                    b.Navigation("Instigador");

                    b.Navigation("Objetivo");
                });

            modelBuilder.Entity("AppGM.Core.ModeloEspecialidad", b =>
                {
                    b.HasOne("AppGM.Core.ModeloPersonaje", "PersonajeContenedor")
                        .WithMany("Especialidades")
                        .HasForeignKey("PersonajeContenedorId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("PersonajeContenedor");
                });

            modelBuilder.Entity("AppGM.Core.ModeloFuenteDeDaño", b =>
                {
                    b.HasOne("AppGM.Core.ModeloDatosReduccionDeDaño", null)
                        .WithMany("FuentesDeDañoQueReduce")
                        .HasForeignKey("ModeloDatosReduccionDeDañoId");

                    b.HasOne("AppGM.Core.ModeloRol", "RolAlQuePertenece")
                        .WithMany("FuentesDeDaño")
                        .HasForeignKey("RolAlQuePerteneceId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("RolAlQuePertenece");
                });

            modelBuilder.Entity("AppGM.Core.ModeloHabilidad", b =>
                {
                    b.HasOne("AppGM.Core.ModeloPersonaje", "Dueño")
                        .WithMany("Habilidades")
                        .HasForeignKey("DueñoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AppGM.Core.ModeloPersonaje", null)
                        .WithMany("Skills")
                        .HasForeignKey("ModeloPersonajeId");

                    b.Navigation("Dueño");
                });

            modelBuilder.Entity("AppGM.Core.ModeloItem", b =>
                {
                    b.HasOne("AppGM.Core.ModeloPersonaje", "PersonajePortador")
                        .WithMany("Inventario")
                        .HasForeignKey("PersonajePortadorId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AppGM.Core.ModeloRol", "RolAlQuePertenece")
                        .WithMany()
                        .HasForeignKey("RolAlQuePerteneceId");

                    b.Navigation("PersonajePortador");

                    b.Navigation("RolAlQuePertenece");
                });

            modelBuilder.Entity("AppGM.Core.ModeloMapa", b =>
                {
                    b.HasOne("AppGM.Core.ModeloAdministradorDeCombate", "CombateAlQuePertenece")
                        .WithMany("Mapas")
                        .HasForeignKey("CombateAlQuePerteneceId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AppGM.Core.ModeloRol", "Rol")
                        .WithMany("Mapas")
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("CombateAlQuePertenece");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("AppGM.Core.ModeloParteDelCuerpo", b =>
                {
                    b.HasOne("AppGM.Core.ModeloSlot", "SlotContenedor")
                        .WithOne("ParteDelCuerpoAlmacenada")
                        .HasForeignKey("AppGM.Core.ModeloParteDelCuerpo", "IdSlotDueño")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppGM.Core.ModeloPersonaje", "PersonajeContenedor")
                        .WithMany("PartesDelCuerpo")
                        .HasForeignKey("PersonajeContenedorId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("PersonajeContenedor");

                    b.Navigation("SlotContenedor");
                });

            modelBuilder.Entity("AppGM.Core.ModeloParticipante", b =>
                {
                    b.HasOne("AppGM.Core.ModeloAdministradorDeCombate", "CombateActual")
                        .WithMany("Participantes")
                        .HasForeignKey("CombateActualId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("AppGM.Core.ModeloPersonaje", "Personaje")
                        .WithMany("ParticipacionEnCombates")
                        .HasForeignKey("PersonajeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("CombateActual");

                    b.Navigation("Personaje");
                });

            modelBuilder.Entity("AppGM.Core.ModeloPersonaje", b =>
                {
                    b.HasOne("AppGM.Core.ModeloVector2", "Posicion")
                        .WithMany()
                        .HasForeignKey("PosicionId");

                    b.HasOne("AppGM.Core.ModeloRol", "Rol")
                        .WithMany("Personajes")
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Posicion");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("AppGM.Core.ModeloSlot", b =>
                {
                    b.HasOne("AppGM.Core.ModeloItem", "ItemDueño")
                        .WithMany("Slots")
                        .HasForeignKey("ItemDueñoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AppGM.Core.ModeloParteDelCuerpo", "ParteDelCuerpoDueña")
                        .WithMany("Slots")
                        .HasForeignKey("ParteDelCuerpoDueñaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AppGM.Core.ModeloPersonaje", "PersonajeContenedor")
                        .WithMany("SlotsBase")
                        .HasForeignKey("PersonajeContenedorId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("ItemDueño");

                    b.Navigation("ParteDelCuerpoDueña");

                    b.Navigation("PersonajeContenedor");
                });

            modelBuilder.Entity("AppGM.Core.ModeloTiradaBase", b =>
                {
                    b.HasOne("AppGM.Core.ModeloFuncion", "FuncionContenedora")
                        .WithMany("Tiradas")
                        .HasForeignKey("FuncionContenedoraId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AppGM.Core.ModeloHabilidad", "HabilidadContenedora")
                        .WithMany("Tiradas")
                        .HasForeignKey("HabilidadContenedoraId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AppGM.Core.ModeloItem", "ItemContenedor")
                        .WithMany("Tiradas")
                        .HasForeignKey("ItemContenedorId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AppGM.Core.ModeloHabilidad", null)
                        .WithMany("TiradasDeUso")
                        .HasForeignKey("ModeloHabilidadId");

                    b.HasOne("AppGM.Core.ModeloPersonaje", "PersonajeContenedor")
                        .WithMany("Tiradas")
                        .HasForeignKey("PersonajeContenedorId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("FuncionContenedora");

                    b.Navigation("HabilidadContenedora");

                    b.Navigation("ItemContenedor");

                    b.Navigation("PersonajeContenedor");
                });

            modelBuilder.Entity("AppGM.Core.ModeloUnidadMapa", b =>
                {
                    b.HasOne("AppGM.Core.ModeloMapa", "Mapa")
                        .WithMany("PosicionesUnidades")
                        .HasForeignKey("MapaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AppGM.Core.ModeloPersonaje", "Personaje")
                        .WithMany("UnidadesEnMapa")
                        .HasForeignKey("PersonajeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AppGM.Core.ModeloVector2", "Posicion")
                        .WithMany()
                        .HasForeignKey("PosicionId");

                    b.Navigation("Mapa");

                    b.Navigation("Personaje");

                    b.Navigation("Posicion");
                });

            modelBuilder.Entity("AppGM.Core.ModeloVariableBase", b =>
                {
                    b.HasOne("AppGM.Core.ModeloFuncion", "FuncionContenedora")
                        .WithMany("Variables")
                        .HasForeignKey("FuncionContenedoraId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AppGM.Core.ModeloHabilidad", "HabilidadContenedora")
                        .WithMany("Variables")
                        .HasForeignKey("HabilidadContenedoraId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AppGM.Core.ModeloItem", "ItemContenedor")
                        .WithMany("Variables")
                        .HasForeignKey("ItemContenedorId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AppGM.Core.ModeloPersonaje", "PersonajeContenedor")
                        .WithMany("Variables")
                        .HasForeignKey("PersonajeContenedorId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("FuncionContenedora");

                    b.Navigation("HabilidadContenedora");

                    b.Navigation("ItemContenedor");

                    b.Navigation("PersonajeContenedor");
                });

            modelBuilder.Entity("AppGM.Core.TIEfectoSiendoAplicadoFuncion", b =>
                {
                    b.HasOne("AppGM.Core.ModeloEfectoSiendoAplicado", "EfectoAplicandose")
                        .WithMany("Funciones")
                        .HasForeignKey("IdEfectoSiendoAplicado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppGM.Core.ModeloFuncion", "ModeloFuncion")
                        .WithMany()
                        .HasForeignKey("IdFuncion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EfectoAplicandose");

                    b.Navigation("ModeloFuncion");
                });

            modelBuilder.Entity("AppGM.Core.TIFuncionEfecto", b =>
                {
                    b.HasOne("AppGM.Core.ModeloEfecto", "Efecto")
                        .WithMany("Funciones")
                        .HasForeignKey("IDEfecto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppGM.Core.ModeloFuncion", "Funcion")
                        .WithOne("EfectoContenedor")
                        .HasForeignKey("AppGM.Core.TIFuncionEfecto", "IDFuncion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Efecto");

                    b.Navigation("Funcion");
                });

            modelBuilder.Entity("AppGM.Core.TIFuncionHabilidad", b =>
                {
                    b.HasOne("AppGM.Core.ModeloFuncion", "Funcion")
                        .WithOne("HabilidadContenedora")
                        .HasForeignKey("AppGM.Core.TIFuncionHabilidad", "IDFuncion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppGM.Core.ModeloHabilidad", "Habilidad")
                        .WithMany("Funciones")
                        .HasForeignKey("IDHabilidad")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Funcion");

                    b.Navigation("Habilidad");
                });

            modelBuilder.Entity("AppGM.Core.TIFuncionHandlerEvento<AppGM.Core.ModeloEfecto>", b =>
                {
                    b.HasOne("AppGM.Core.ModeloFuncion_HandlerEvento", "Funcion")
                        .WithMany("EventosEnEfecto")
                        .HasForeignKey("IdFuncion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppGM.Core.ModeloEfecto", "Otro")
                        .WithMany("HandlersEventos")
                        .HasForeignKey("IdOtro")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Funcion");

                    b.Navigation("Otro");
                });

            modelBuilder.Entity("AppGM.Core.TIFuncionHandlerEvento<AppGM.Core.ModeloHabilidad>", b =>
                {
                    b.HasOne("AppGM.Core.ModeloFuncion_HandlerEvento", "Funcion")
                        .WithMany("EventosEnHabilidad")
                        .HasForeignKey("IdFuncion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppGM.Core.ModeloHabilidad", "Otro")
                        .WithMany("HandlersEventos")
                        .HasForeignKey("IdOtro")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Funcion");

                    b.Navigation("Otro");
                });

            modelBuilder.Entity("AppGM.Core.TIFuncionHandlerEvento<AppGM.Core.ModeloItem>", b =>
                {
                    b.HasOne("AppGM.Core.ModeloFuncion_HandlerEvento", "Funcion")
                        .WithMany("EventosEnUtilizable")
                        .HasForeignKey("IdFuncion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppGM.Core.ModeloItem", "Otro")
                        .WithMany("HandlersEventos")
                        .HasForeignKey("IdOtro")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Funcion");

                    b.Navigation("Otro");
                });

            modelBuilder.Entity("AppGM.Core.TIFuncionHandlerEvento<AppGM.Core.ModeloPersonaje>", b =>
                {
                    b.HasOne("AppGM.Core.ModeloFuncion_HandlerEvento", "Funcion")
                        .WithMany("EventosEnPersonaje")
                        .HasForeignKey("IdFuncion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppGM.Core.ModeloPersonaje", "Otro")
                        .WithMany("HandlersEventos")
                        .HasForeignKey("IdOtro")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Funcion");

                    b.Navigation("Otro");
                });

            modelBuilder.Entity("AppGM.Core.TIFuncionItem", b =>
                {
                    b.HasOne("AppGM.Core.ModeloFuncion", "Funcion")
                        .WithOne("ItemContenedor")
                        .HasForeignKey("AppGM.Core.TIFuncionItem", "IDFuncion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppGM.Core.ModeloItem", "Item")
                        .WithMany("Funciones")
                        .HasForeignKey("IDItem")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Funcion");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("AppGM.Core.TIFuncionPadreFuncion", b =>
                {
                    b.HasOne("AppGM.Core.ModeloFuncion", "Funcion")
                        .WithOne("Padre")
                        .HasForeignKey("AppGM.Core.TIFuncionPadreFuncion", "IDFuncion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppGM.Core.ModeloFuncion", "Padre")
                        .WithMany("Hijos")
                        .HasForeignKey("PadreId");

                    b.Navigation("Funcion");

                    b.Navigation("Padre");
                });

            modelBuilder.Entity("ModeloAlianzaModeloPersonaje", b =>
                {
                    b.HasOne("AppGM.Core.ModeloAlianza", null)
                        .WithMany()
                        .HasForeignKey("AlianzasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppGM.Core.ModeloPersonaje", null)
                        .WithMany()
                        .HasForeignKey("PersonajesAfectadosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ModeloContratoModeloPersonaje", b =>
                {
                    b.HasOne("AppGM.Core.ModeloContrato", null)
                        .WithMany()
                        .HasForeignKey("ContratosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppGM.Core.ModeloPersonaje", null)
                        .WithMany()
                        .HasForeignKey("PersonajesAfectadosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ModeloDatosArmaModeloFuenteDeDaño", b =>
                {
                    b.HasOne("AppGM.Core.ModeloFuenteDeDaño", null)
                        .WithMany()
                        .HasForeignKey("FuentesDeDañoQueAbarcaEsteArmaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppGM.Core.ModeloDatosArma", null)
                        .WithMany()
                        .HasForeignKey("ItemsAbarcadosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ModeloItemModeloSlot", b =>
                {
                    b.HasOne("AppGM.Core.ModeloItem", null)
                        .WithMany()
                        .HasForeignKey("ItemsAlmacenadosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppGM.Core.ModeloSlot", null)
                        .WithMany()
                        .HasForeignKey("SlotsQueOcupaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AppGM.Core.ModeloMagia", b =>
                {
                    b.HasOne("AppGM.Core.ModeloPersonaje", null)
                        .WithMany("Magias")
                        .HasForeignKey("ModeloPersonajeId1");
                });

            modelBuilder.Entity("AppGM.Core.ModeloNoblePhantasm", b =>
                {
                    b.HasOne("AppGM.Core.ModeloServant", null)
                        .WithMany("NoblePhantasms")
                        .HasForeignKey("ModeloServantId");
                });

            modelBuilder.Entity("AppGM.Core.ModeloPerk", b =>
                {
                    b.HasOne("AppGM.Core.ModeloPersonaje", null)
                        .WithMany("Perks")
                        .HasForeignKey("ModeloPersonajeId1");
                });

            modelBuilder.Entity("AppGM.Core.ModeloInvocacion", b =>
                {
                    b.HasOne("AppGM.Core.ModeloPersonaje", "Invocador")
                        .WithMany("Invocaciones")
                        .HasForeignKey("InvocadorId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Invocador");
                });

            modelBuilder.Entity("AppGM.Core.ModeloAdministradorDeCombate", b =>
                {
                    b.Navigation("AmbienteDelCombate");

                    b.Navigation("Mapas");

                    b.Navigation("Participantes");
                });

            modelBuilder.Entity("AppGM.Core.ModeloAlianza", b =>
                {
                    b.Navigation("ContratoDeAlianza");
                });

            modelBuilder.Entity("AppGM.Core.ModeloDatosDefensivo", b =>
                {
                    b.Navigation("ReduccionesDeDaños");
                });

            modelBuilder.Entity("AppGM.Core.ModeloDatosReduccionDeDaño", b =>
                {
                    b.Navigation("FuentesDeDañoQueReduce");
                });

            modelBuilder.Entity("AppGM.Core.ModeloEfecto", b =>
                {
                    b.Navigation("Aplicaciones");

                    b.Navigation("Funciones");

                    b.Navigation("HandlersEventos");
                });

            modelBuilder.Entity("AppGM.Core.ModeloEfectoSiendoAplicado", b =>
                {
                    b.Navigation("Funciones");
                });

            modelBuilder.Entity("AppGM.Core.ModeloFuncion", b =>
                {
                    b.Navigation("EfectoContenedor");

                    b.Navigation("HabilidadContenedora");

                    b.Navigation("Hijos");

                    b.Navigation("ItemContenedor");

                    b.Navigation("Padre");

                    b.Navigation("Tiradas");

                    b.Navigation("Variables");
                });

            modelBuilder.Entity("AppGM.Core.ModeloHabilidad", b =>
                {
                    b.Navigation("Efectos");

                    b.Navigation("Funciones");

                    b.Navigation("HandlersEventos");

                    b.Navigation("Tiradas");

                    b.Navigation("TiradasDeUso");

                    b.Navigation("Variables");
                });

            modelBuilder.Entity("AppGM.Core.ModeloItem", b =>
                {
                    b.Navigation("DatosArma");

                    b.Navigation("DatosConsumible");

                    b.Navigation("DatosDefensivo");

                    b.Navigation("Efectos");

                    b.Navigation("Funciones");

                    b.Navigation("HandlersEventos");

                    b.Navigation("Slots");

                    b.Navigation("Tiradas");

                    b.Navigation("Variables");
                });

            modelBuilder.Entity("AppGM.Core.ModeloMapa", b =>
                {
                    b.Navigation("Ambiente");

                    b.Navigation("PosicionesUnidades");
                });

            modelBuilder.Entity("AppGM.Core.ModeloParteDelCuerpo", b =>
                {
                    b.Navigation("Slots");
                });

            modelBuilder.Entity("AppGM.Core.ModeloParticipante", b =>
                {
                    b.Navigation("AccionesRealizadas");
                });

            modelBuilder.Entity("AppGM.Core.ModeloPersonaje", b =>
                {
                    b.Navigation("EfectosAplicandose");

                    b.Navigation("Especialidades");

                    b.Navigation("Habilidades");

                    b.Navigation("HandlersEventos");

                    b.Navigation("Inventario");

                    b.Navigation("Invocaciones");

                    b.Navigation("Magias");

                    b.Navigation("PartesDelCuerpo");

                    b.Navigation("ParticipacionEnCombates");

                    b.Navigation("Perks");

                    b.Navigation("Skills");

                    b.Navigation("SlotsBase");

                    b.Navigation("Tiradas");

                    b.Navigation("UnidadesEnMapa");

                    b.Navigation("Variables");
                });

            modelBuilder.Entity("AppGM.Core.ModeloRol", b =>
                {
                    b.Navigation("AmbienteGlobal");

                    b.Navigation("ClimaHorarioGlobal");

                    b.Navigation("Combates");

                    b.Navigation("FuentesDeDaño");

                    b.Navigation("Mapas");

                    b.Navigation("Personajes");
                });

            modelBuilder.Entity("AppGM.Core.ModeloSlot", b =>
                {
                    b.Navigation("ParteDelCuerpoAlmacenada");
                });

            modelBuilder.Entity("AppGM.Core.ModeloFuncion_HandlerEvento", b =>
                {
                    b.Navigation("EventosEnEfecto");

                    b.Navigation("EventosEnHabilidad");

                    b.Navigation("EventosEnPersonaje");

                    b.Navigation("EventosEnUtilizable");
                });

            modelBuilder.Entity("AppGM.Core.ModeloInvocacion", b =>
                {
                    b.Navigation("DatosInvocacion");
                });

            modelBuilder.Entity("AppGM.Core.ModeloPersonajeJugable", b =>
                {
                    b.Navigation("Caracteristicas");
                });

            modelBuilder.Entity("AppGM.Core.ModeloServant", b =>
                {
                    b.Navigation("NoblePhantasms");
                });
#pragma warning restore 612, 618
        }
    }
}
