// <auto-generated />
using System;
using AppGM.Core;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AppGM.Core.Migrations
{
    [DbContext(typeof(RolContext))]
    [Migration("20201119162908_Inicial")]
    partial class Inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9");

            modelBuilder.Entity("AppGM.Core.ModeloAccion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descripcion")
                        .HasColumnType("TEXT")
                        .HasMaxLength(2000);

                    b.HasKey("Id");

                    b.ToTable("Acciones");
                });

            modelBuilder.Entity("AppGM.Core.ModeloAdministradorDeCombate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("IndicePersonajeTurnoActual")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .HasColumnType("TEXT");

                    b.Property<uint>("TurnoActual")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Combates");
                });

            modelBuilder.Entity("AppGM.Core.ModeloCaracteristicas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Contextura")
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.Property<int>("EAlineamiento")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EManoDominante")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ESexo")
                        .HasColumnType("INTEGER");

                    b.Property<ushort>("Edad")
                        .HasColumnType("INTEGER");

                    b.Property<ushort>("Estatura")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nacionalidad")
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("ModeloCaracteristicas");
                });

            modelBuilder.Entity("AppGM.Core.ModeloCargasHabilidad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CargasMaximas")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("ModeloCargasHabilidad");
                });

            modelBuilder.Entity("AppGM.Core.ModeloEfecto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descripcion")
                        .HasColumnType("TEXT")
                        .HasMaxLength(500);

                    b.Property<string>("Nombre")
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.Property<int>("Tipo")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("ModeloEfecto");

                    b.HasDiscriminator<int>("Tipo").HasValue(1);
                });

            modelBuilder.Entity("AppGM.Core.ModeloHabilidad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<ushort>("CostoDeMana")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descripcion")
                        .HasColumnType("TEXT")
                        .HasMaxLength(2000);

                    b.Property<string>("Nombre")
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.Property<int>("Tipo")
                        .HasColumnType("INTEGER");

                    b.Property<ushort>("TurnosDeDuracion")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("ModeloHabilidad");

                    b.HasDiscriminator<int>("Tipo").HasValue(1);
                });

            modelBuilder.Entity("AppGM.Core.ModeloLimitador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DiasDeEnfriamiento")
                        .HasColumnType("INTEGER");

                    b.Property<int>("LimiteDeUsos")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("ModeloLimitador");
                });

            modelBuilder.Entity("AppGM.Core.ModeloMapa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("EFormatoImagen")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NombreMapa")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Mapas");
                });

            modelBuilder.Entity("AppGM.Core.ModeloModificadorDeStatBase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Tipo")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ValorRequeridoTirada")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("ModeloModificadorDeStatBase");

                    b.HasDiscriminator<int>("Tipo").HasValue(1);
                });

            modelBuilder.Entity("AppGM.Core.ModeloParticipante", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("EsSuTurno")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TiradaIniciativa")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Participantes");
                });

            modelBuilder.Entity("AppGM.Core.ModeloPersonaje", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<ushort>("Agi")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Clase")
                        .HasColumnType("INTEGER");

                    b.Property<ushort>("End")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("EstaEnCombate")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FormatoImagen")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Hp")
                        .HasColumnType("INTEGER");

                    b.Property<ushort>("Intel")
                        .HasColumnType("INTEGER");

                    b.Property<ushort>("Lck")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MaxHp")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.Property<string>("PathImagen")
                        .HasColumnType("TEXT");

                    b.Property<int?>("PosicionId")
                        .HasColumnType("INTEGER");

                    b.Property<ushort>("Str")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TipoPersonaje")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PosicionId");

                    b.ToTable("ModeloPersonaje");

                    b.HasDiscriminator<int>("Clase").HasValue(3);
                });

            modelBuilder.Entity("AppGM.Core.ModeloRol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descripcion")
                        .HasColumnType("TEXT")
                        .HasMaxLength(2000);

                    b.Property<ushort>("Dia")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("FechaUltimaSesion")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.Property<string>("Registros")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Rols");
                });

            modelBuilder.Entity("AppGM.Core.ModeloSlot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Espacio")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ModeloSlot");
                });

            modelBuilder.Entity("AppGM.Core.ModeloTiradaBase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ModeloTiradaBase");

                    b.HasDiscriminator<string>("Discriminator").HasValue("ModeloTiradaBase");
                });

            modelBuilder.Entity("AppGM.Core.ModeloUnidadMapa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ETipoUnidad")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .HasColumnType("TEXT");

                    b.Property<int>("Tipo")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("UnidadesMapa");

                    b.HasDiscriminator<int>("Tipo").HasValue(1);
                });

            modelBuilder.Entity("AppGM.Core.ModeloUtilizable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("EStatDeLaQueDepende")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EStatQueAfecta")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Tipo")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("ModeloUtilizable");

                    b.HasDiscriminator<int>("Tipo").HasValue(1);
                });

            modelBuilder.Entity("AppGM.Core.ModeloVector2", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("X")
                        .HasColumnType("REAL");

                    b.Property<double>("Y")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("Vectores2");
                });

            modelBuilder.Entity("AppGM.Core.TIAdministradorDeCombateMapa", b =>
                {
                    b.Property<int>("IdAdministradorDeCombate")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdMapa")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdAdministradorDeCombate", "IdMapa");

                    b.HasIndex("IdMapa");

                    b.ToTable("CombateMapas");
                });

            modelBuilder.Entity("AppGM.Core.TIAdministradorDeCombateParticipante", b =>
                {
                    b.Property<int>("IdAdministradorDeCombate")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdParticipante")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdAdministradorDeCombate", "IdParticipante");

                    b.HasIndex("IdParticipante")
                        .IsUnique();

                    b.ToTable("CombateParticipantes");
                });

            modelBuilder.Entity("AppGM.Core.TIArmasDistanciaEfecto", b =>
                {
                    b.Property<int>("IdArmasDistancia")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdEfecto")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdArmasDistancia", "IdEfecto");

                    b.HasIndex("IdEfecto");

                    b.ToTable("TIArmasDistanciaEfecto");
                });

            modelBuilder.Entity("AppGM.Core.TIArmasDistanciaTiradaDeDaño", b =>
                {
                    b.Property<int>("IdArmasDistancia")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdTirada")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdArmasDistancia", "IdTirada");

                    b.HasIndex("IdArmasDistancia")
                        .IsUnique();

                    b.HasIndex("IdTirada");

                    b.ToTable("TIArmasDistanciaTiradaDeDaño");
                });

            modelBuilder.Entity("AppGM.Core.TIArmasDistanciaTiradaVariable", b =>
                {
                    b.Property<int>("IdArmasDistancia")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdTirada")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdArmasDistancia", "IdTirada");

                    b.HasIndex("IdArmasDistancia")
                        .IsUnique();

                    b.HasIndex("IdTirada");

                    b.ToTable("TIArmasDistanciaTiradaVariable");
                });

            modelBuilder.Entity("AppGM.Core.TIEfectoModificadorDeStatBase", b =>
                {
                    b.Property<int>("IdEfecto")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdModificadorDeStat")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdEfecto", "IdModificadorDeStat");

                    b.HasIndex("IdModificadorDeStat");

                    b.ToTable("TIEfectoModificadorDeStatBase");
                });

            modelBuilder.Entity("AppGM.Core.TIHabilidadCargasHabilidad", b =>
                {
                    b.Property<int>("IdHabilidad")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdCargasHabilidad")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdHabilidad", "IdCargasHabilidad");

                    b.HasIndex("IdCargasHabilidad");

                    b.HasIndex("IdHabilidad")
                        .IsUnique();

                    b.ToTable("TIHabilidadCargasHabilidad");
                });

            modelBuilder.Entity("AppGM.Core.TIHabilidadEfecto", b =>
                {
                    b.Property<int>("IdHabilidad")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdEfecto")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdHabilidad", "IdEfecto");

                    b.HasIndex("IdEfecto");

                    b.ToTable("TIHabilidadEfecto");
                });

            modelBuilder.Entity("AppGM.Core.TIHabilidadInvocacion", b =>
                {
                    b.Property<int>("IdHabilidad")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdInvocacion")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdHabilidad", "IdInvocacion");

                    b.HasIndex("IdInvocacion");

                    b.ToTable("TIHabilidadInvocacion");
                });

            modelBuilder.Entity("AppGM.Core.TIHabilidadItem", b =>
                {
                    b.Property<int>("IdHabilidad")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdItem")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdHabilidad", "IdItem");

                    b.HasIndex("IdItem");

                    b.ToTable("TIHabilidadItem");
                });

            modelBuilder.Entity("AppGM.Core.TIHabilidadLimitador", b =>
                {
                    b.Property<int>("IdHabilidad")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdLimitador")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdHabilidad", "IdLimitador");

                    b.HasIndex("IdHabilidad")
                        .IsUnique();

                    b.HasIndex("IdLimitador");

                    b.ToTable("TIHabilidadLimitador");
                });

            modelBuilder.Entity("AppGM.Core.TIHabilidadTiradaBase", b =>
                {
                    b.Property<int>("IdHabilidad")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdTirada")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdHabilidad", "IdTirada");

                    b.HasIndex("IdTirada");

                    b.ToTable("TIHabilidadTiradaBase");
                });

            modelBuilder.Entity("AppGM.Core.TIHabilidadTiradaDeDaño", b =>
                {
                    b.Property<int>("IdHabilidad")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdTirada")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdHabilidad", "IdTirada");

                    b.HasIndex("IdHabilidad")
                        .IsUnique();

                    b.HasIndex("IdTirada");

                    b.ToTable("TIHabilidadTiradaDeDaño");
                });

            modelBuilder.Entity("AppGM.Core.TIInvocacionEfecto", b =>
                {
                    b.Property<int>("IdInvocacion")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdEfecto")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdInvocacion", "IdEfecto");

                    b.HasIndex("IdEfecto");

                    b.HasIndex("IdInvocacion")
                        .IsUnique();

                    b.ToTable("TIInvocacionEfecto");
                });

            modelBuilder.Entity("AppGM.Core.TIInvocacionPersonaje", b =>
                {
                    b.Property<int>("IdInvocacion")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdPersonaje")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdInvocacion", "IdPersonaje");

                    b.HasIndex("IdInvocacion")
                        .IsUnique();

                    b.HasIndex("IdPersonaje");

                    b.ToTable("TIInvocacionPersonaje");
                });

            modelBuilder.Entity("AppGM.Core.TIMapaUnidadMapa", b =>
                {
                    b.Property<int>("IdMapa")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdUnidadMapa")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdMapa", "IdUnidadMapa");

                    b.HasIndex("IdUnidadMapa");

                    b.ToTable("MapasUnidadesMapa");
                });

            modelBuilder.Entity("AppGM.Core.TIModificadorDeStatBaseTiradaBase", b =>
                {
                    b.Property<int>("IdModificadorDeStatBase")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdTirada")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdModificadorDeStatBase", "IdTirada");

                    b.HasIndex("IdModificadorDeStatBase")
                        .IsUnique();

                    b.HasIndex("IdTirada");

                    b.ToTable("TIModificadorDeStatBaseTiradaBase");
                });

            modelBuilder.Entity("AppGM.Core.TIOfensivoEfecto", b =>
                {
                    b.Property<int>("IdOfensivo")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdEfecto")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdOfensivo", "IdEfecto");

                    b.HasIndex("IdEfecto");

                    b.HasIndex("IdOfensivo")
                        .IsUnique();

                    b.ToTable("TIOfensivoEfecto");
                });

            modelBuilder.Entity("AppGM.Core.TIOfensivoTiradaDeDaño", b =>
                {
                    b.Property<int>("IdOfensivo")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdTiradaDeDaño")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdOfensivo", "IdTiradaDeDaño");

                    b.HasIndex("IdTiradaDeDaño");

                    b.ToTable("TIOfensivoTiradaDeDaño");
                });

            modelBuilder.Entity("AppGM.Core.TIParticipanteAccion", b =>
                {
                    b.Property<int>("IdParticipante")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdAccion")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdParticipante", "IdAccion");

                    b.HasIndex("IdAccion");

                    b.ToTable("ParticipanteAccion");
                });

            modelBuilder.Entity("AppGM.Core.TIParticipantePersonaje", b =>
                {
                    b.Property<int>("IdParticipante")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdPersonaje")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdParticipante", "IdPersonaje");

                    b.HasIndex("IdParticipante")
                        .IsUnique();

                    b.HasIndex("IdPersonaje");

                    b.ToTable("ParticipantePersonaje");
                });

            modelBuilder.Entity("AppGM.Core.TIPersonajeArmaDistancia", b =>
                {
                    b.Property<int>("IdArmaDistancia")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdPersonaje")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdArmaDistancia", "IdPersonaje");

                    b.HasIndex("IdPersonaje");

                    b.ToTable("PersonajeArmasDistancias");
                });

            modelBuilder.Entity("AppGM.Core.TIPersonajeDefensivo", b =>
                {
                    b.Property<int>("IdPersonaje")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdDefensivo")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdPersonaje", "IdDefensivo");

                    b.HasIndex("IdDefensivo");

                    b.ToTable("PersonajeDefensivos");
                });

            modelBuilder.Entity("AppGM.Core.TIPersonajeEfecto", b =>
                {
                    b.Property<int>("IdPersonaje")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdEfecto")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdPersonaje", "IdEfecto");

                    b.HasIndex("IdEfecto");

                    b.ToTable("PersonajeEfectos");
                });

            modelBuilder.Entity("AppGM.Core.TIPersonajeHabilidad", b =>
                {
                    b.Property<int>("IdPersonaje")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdHabilidad")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdPersonaje", "IdHabilidad");

                    b.HasIndex("IdHabilidad");

                    b.ToTable("PersonajeSkills");
                });

            modelBuilder.Entity("AppGM.Core.TIPersonajeJugableCaracteristicas", b =>
                {
                    b.Property<int>("IdPersonajeJugable")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdCaracteristica")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdPersonajeJugable", "IdCaracteristica");

                    b.HasIndex("IdCaracteristica");

                    b.HasIndex("IdPersonajeJugable")
                        .IsUnique();

                    b.ToTable("TIPersonajeJugableCaracteristicas");
                });

            modelBuilder.Entity("AppGM.Core.TIPersonajeJugableInvocacion", b =>
                {
                    b.Property<int>("IdPersonajeJugable")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdInvocacion")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdPersonajeJugable", "IdInvocacion");

                    b.HasIndex("IdInvocacion");

                    b.ToTable("TIPersonajeJugableInvocacion");
                });

            modelBuilder.Entity("AppGM.Core.TIPersonajeMagia", b =>
                {
                    b.Property<int>("IdPersonaje")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdMagia")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdPersonaje", "IdMagia");

                    b.HasIndex("IdMagia");

                    b.ToTable("PersonajeMagias");
                });

            modelBuilder.Entity("AppGM.Core.TIPersonajeModificadorDeDefensa", b =>
                {
                    b.Property<int>("IdPersonaje")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdModificadorDefensa")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdPersonaje", "IdModificadorDefensa");

                    b.HasIndex("IdModificadorDefensa");

                    b.ToTable("PersonajeModificadoresDeDefensa");
                });

            modelBuilder.Entity("AppGM.Core.TIPersonajePerk", b =>
                {
                    b.Property<int>("IdPersonaje")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdPerk")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdPersonaje", "IdPerk");

                    b.HasIndex("IdPerk");

                    b.ToTable("PersonajePerks");
                });

            modelBuilder.Entity("AppGM.Core.TIPersonajePersonaje", b =>
                {
                    b.Property<int>("IdPersonaje")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdAliado")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdPersonaje", "IdAliado");

                    b.HasIndex("IdAliado");

                    b.ToTable("PersonajeAliados");
                });

            modelBuilder.Entity("AppGM.Core.TIPersonajeUnidadMapa", b =>
                {
                    b.Property<int>("IdPersonaje")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdUnidadMapa")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdPersonaje", "IdUnidadMapa");

                    b.HasIndex("IdUnidadMapa")
                        .IsUnique();

                    b.ToTable("PersonajesUnidadesMapa");
                });

            modelBuilder.Entity("AppGM.Core.TIPersonajeUtilizable", b =>
                {
                    b.Property<int>("IdPersonaje")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdUtilizable")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdPersonaje", "IdUtilizable");

                    b.HasIndex("IdUtilizable");

                    b.ToTable("PersonajeUtilizables");
                });

            modelBuilder.Entity("AppGM.Core.TIPortableModificadorDeStatBase", b =>
                {
                    b.Property<int>("IdPortable")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdModificadorDeStat")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdPortable", "IdModificadorDeStat");

                    b.HasIndex("IdModificadorDeStat");

                    b.ToTable("TIPortableModificadorDeStatBase");
                });

            modelBuilder.Entity("AppGM.Core.TIPortableSlots", b =>
                {
                    b.Property<int>("IdPortable")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdSlot")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdPortable", "IdSlot");

                    b.HasIndex("IdSlot");

                    b.ToTable("TIPortableSlots");
                });

            modelBuilder.Entity("AppGM.Core.TIServantNoblePhantasm", b =>
                {
                    b.Property<int>("IdServant")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdNoblePhantasm")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdServant", "IdNoblePhantasm");

                    b.HasIndex("IdNoblePhantasm");

                    b.ToTable("ServantNoblePhantasms");
                });

            modelBuilder.Entity("AppGM.Core.TISlotItem", b =>
                {
                    b.Property<int>("IdSlot")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdItem")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdSlot", "IdItem");

                    b.HasIndex("IdItem");

                    b.ToTable("TISlotItem");
                });

            modelBuilder.Entity("AppGM.Core.TIUnidadMapaVector2", b =>
                {
                    b.Property<int>("IdUnidadMapa")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdVector")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdUnidadMapa", "IdVector");

                    b.HasIndex("IdUnidadMapa")
                        .IsUnique();

                    b.HasIndex("IdVector");

                    b.ToTable("UnidadesMapaVectores2");
                });

            modelBuilder.Entity("AppGM.Core.TIUtilizableEfecto", b =>
                {
                    b.Property<int>("IdUtilizable")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdEfecto")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdUtilizable", "IdEfecto");

                    b.HasIndex("IdEfecto");

                    b.ToTable("TIUtilizableEfecto");
                });

            modelBuilder.Entity("AppGM.Core.TIUtilizableModificadorDeStatBase", b =>
                {
                    b.Property<int>("IdUtilizable")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdModificadorStatBase")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdUtilizable", "IdModificadorStatBase");

                    b.HasIndex("IdModificadorStatBase");

                    b.HasIndex("IdUtilizable")
                        .IsUnique();

                    b.ToTable("TIUtilizableModificadorDeStatBase");
                });

            modelBuilder.Entity("AppGM.Core.TIUtilizableTiradaBase", b =>
                {
                    b.Property<int>("IdUtilizable")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdTirada")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdUtilizable", "IdTirada");

                    b.HasIndex("IdTirada");

                    b.HasIndex("IdUtilizable")
                        .IsUnique();

                    b.ToTable("TIUtilizableTiradaBase");
                });

            modelBuilder.Entity("AppGM.Core.ModeloEfectoTemporal", b =>
                {
                    b.HasBaseType("AppGM.Core.ModeloEfecto");

                    b.Property<ushort>("TurnosDeDuracion")
                        .HasColumnType("INTEGER");

                    b.HasDiscriminator().HasValue(2);
                });

            modelBuilder.Entity("AppGM.Core.ModeloMagia", b =>
                {
                    b.HasBaseType("AppGM.Core.ModeloHabilidad");

                    b.Property<byte>("Nivel")
                        .HasColumnType("INTEGER");

                    b.HasDiscriminator().HasValue(3);
                });

            modelBuilder.Entity("AppGM.Core.ModeloNoblePhantasm", b =>
                {
                    b.HasBaseType("AppGM.Core.ModeloHabilidad");

                    b.Property<int>("Rango")
                        .HasColumnType("INTEGER");

                    b.HasDiscriminator().HasValue(4);
                });

            modelBuilder.Entity("AppGM.Core.ModeloPerk", b =>
                {
                    b.HasBaseType("AppGM.Core.ModeloHabilidad");

                    b.Property<int>("Rango")
                        .HasColumnName("ModeloPerk_Rango")
                        .HasColumnType("INTEGER");

                    b.HasDiscriminator().HasValue(2);
                });

            modelBuilder.Entity("AppGM.Core.ModeloModificadorDeDefensa", b =>
                {
                    b.HasBaseType("AppGM.Core.ModeloModificadorDeStatBase");

                    b.Property<int>("AlineamientosDelInstigador")
                        .HasColumnType("INTEGER");

                    b.Property<byte>("ModificacionFija")
                        .HasColumnType("INTEGER");

                    b.Property<byte>("ModificacionPorcentual")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TiposDeDaño")
                        .HasColumnType("INTEGER");

                    b.HasDiscriminator().HasValue(4);
                });

            modelBuilder.Entity("AppGM.Core.ModeloModificadorDeStatClase", b =>
                {
                    b.HasBaseType("AppGM.Core.ModeloModificadorDeStatBase");

                    b.Property<int>("IdObjeto")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NombreClase")
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.HasDiscriminator().HasValue(3);
                });

            modelBuilder.Entity("AppGM.Core.ModeloModificadorDeStatPrimitivos", b =>
                {
                    b.HasBaseType("AppGM.Core.ModeloModificadorDeStatBase");

                    b.Property<int>("StatsQueAfecta")
                        .HasColumnType("INTEGER");

                    b.Property<byte>("Valor")
                        .HasColumnType("INTEGER");

                    b.HasDiscriminator().HasValue(2);
                });

            modelBuilder.Entity("AppGM.Core.ModeloInvocacion", b =>
                {
                    b.HasBaseType("AppGM.Core.ModeloPersonaje");

                    b.Property<bool>("EsAutomata")
                        .HasColumnType("INTEGER");

                    b.HasDiscriminator().HasValue(2);
                });

            modelBuilder.Entity("AppGM.Core.ModeloPersonajeJugable", b =>
                {
                    b.HasBaseType("AppGM.Core.ModeloPersonaje");

                    b.HasDiscriminator().HasValue(1);
                });

            modelBuilder.Entity("AppGM.Core.ModeloTiradaVariable", b =>
                {
                    b.HasBaseType("AppGM.Core.ModeloTiradaBase");

                    b.Property<ushort>("Caras")
                        .HasColumnType("INTEGER");

                    b.Property<ushort>("Dados")
                        .HasColumnType("INTEGER");

                    b.HasDiscriminator().HasValue("ModeloTiradaVariable");
                });

            modelBuilder.Entity("AppGM.Core.ModeloUnidadMapaMasterServant", b =>
                {
                    b.HasBaseType("AppGM.Core.ModeloUnidadMapa");

                    b.Property<int>("EClaseServant")
                        .HasColumnType("INTEGER");

                    b.HasDiscriminator().HasValue(2);
                });

            modelBuilder.Entity("AppGM.Core.ModeloItem", b =>
                {
                    b.HasBaseType("AppGM.Core.ModeloUtilizable");

                    b.Property<decimal>("StatsQueOcupa")
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue(3);
                });

            modelBuilder.Entity("AppGM.Core.ModeloPortable", b =>
                {
                    b.HasBaseType("AppGM.Core.ModeloUtilizable");

                    b.HasDiscriminator().HasValue(2);
                });

            modelBuilder.Entity("AppGM.Core.ModeloInvocacionCondicionada", b =>
                {
                    b.HasBaseType("AppGM.Core.ModeloInvocacion");

                    b.HasDiscriminator().HasValue(4);
                });

            modelBuilder.Entity("AppGM.Core.ModeloInvocacionTemporal", b =>
                {
                    b.HasBaseType("AppGM.Core.ModeloInvocacion");

                    b.Property<byte>("TurnosDeDuracion")
                        .HasColumnType("INTEGER");

                    b.HasDiscriminator().HasValue(5);
                });

            modelBuilder.Entity("AppGM.Core.ModeloMaster", b =>
                {
                    b.HasBaseType("AppGM.Core.ModeloPersonajeJugable");

                    b.Property<ushort>("Chr")
                        .HasColumnType("INTEGER");

                    b.Property<ushort>("CommandSpells")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EClaseDeSuServant")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Lore")
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue(6);
                });

            modelBuilder.Entity("AppGM.Core.ModeloServant", b =>
                {
                    b.HasBaseType("AppGM.Core.ModeloPersonajeJugable");

                    b.Property<int>("mEClaseDeServant")
                        .HasColumnType("INTEGER");

                    b.Property<int>("mERangoNP")
                        .HasColumnType("INTEGER");

                    b.HasDiscriminator().HasValue(7);
                });

            modelBuilder.Entity("AppGM.Core.ModeloTiradaDeDaño", b =>
                {
                    b.HasBaseType("AppGM.Core.ModeloTiradaVariable");

                    b.Property<int>("TipoDeDaño")
                        .HasColumnType("INTEGER");

                    b.HasDiscriminator().HasValue("ModeloTiradaDeDaño");
                });

            modelBuilder.Entity("AppGM.Core.ModeloUnidadMapaInvocacionTrampa", b =>
                {
                    b.HasBaseType("AppGM.Core.ModeloUnidadMapaMasterServant");

                    b.Property<int>("Cantidad")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("EsDeMaster")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Inicial")
                        .HasColumnType("TEXT")
                        .HasMaxLength(1);

                    b.HasDiscriminator().HasValue(3);
                });

            modelBuilder.Entity("AppGM.Core.ModeloConsumible", b =>
                {
                    b.HasBaseType("AppGM.Core.ModeloItem");

                    b.Property<ushort>("Usos")
                        .HasColumnType("INTEGER");

                    b.Property<ushort>("UsosRestantes")
                        .HasColumnType("INTEGER");

                    b.HasDiscriminator().HasValue(7);
                });

            modelBuilder.Entity("AppGM.Core.ModeloDefensivo", b =>
                {
                    b.HasBaseType("AppGM.Core.ModeloPortable");

                    b.Property<int>("Estado")
                        .HasColumnType("INTEGER");

                    b.HasDiscriminator().HasValue(4);
                });

            modelBuilder.Entity("AppGM.Core.ModeloOfensivo", b =>
                {
                    b.HasBaseType("AppGM.Core.ModeloPortable");

                    b.Property<int>("DañosQuePuedeInfligir")
                        .HasColumnType("INTEGER");

                    b.HasDiscriminator().HasValue(6);
                });

            modelBuilder.Entity("AppGM.Core.ModeloArmasDistancia", b =>
                {
                    b.HasBaseType("AppGM.Core.ModeloConsumible");

                    b.Property<int>("TipoDeDañoQueInflige")
                        .HasColumnType("INTEGER");

                    b.HasDiscriminator().HasValue(8);
                });

            modelBuilder.Entity("AppGM.Core.ModeloDefensivoAbsoluto", b =>
                {
                    b.HasBaseType("AppGM.Core.ModeloDefensivo");

                    b.Property<short>("Usos")
                        .HasColumnName("ModeloDefensivoAbsoluto_Usos")
                        .HasColumnType("INTEGER");

                    b.HasDiscriminator().HasValue(5);
                });

            modelBuilder.Entity("AppGM.Core.ModeloPersonaje", b =>
                {
                    b.HasOne("AppGM.Core.ModeloVector2", "Posicion")
                        .WithMany()
                        .HasForeignKey("PosicionId");
                });

            modelBuilder.Entity("AppGM.Core.TIAdministradorDeCombateMapa", b =>
                {
                    b.HasOne("AppGM.Core.ModeloAdministradorDeCombate", "AdministradorDeCombate")
                        .WithMany("Mapas")
                        .HasForeignKey("IdAdministradorDeCombate")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppGM.Core.ModeloMapa", "Mapa")
                        .WithMany()
                        .HasForeignKey("IdMapa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AppGM.Core.TIAdministradorDeCombateParticipante", b =>
                {
                    b.HasOne("AppGM.Core.ModeloAdministradorDeCombate", "AdministradorDeCombate")
                        .WithMany("Participantes")
                        .HasForeignKey("IdAdministradorDeCombate")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppGM.Core.ModeloParticipante", "Participante")
                        .WithOne("Combate")
                        .HasForeignKey("AppGM.Core.TIAdministradorDeCombateParticipante", "IdParticipante")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AppGM.Core.TIArmasDistanciaEfecto", b =>
                {
                    b.HasOne("AppGM.Core.ModeloArmasDistancia", "ArmasDistancia")
                        .WithMany("EfectoQueInflige")
                        .HasForeignKey("IdArmasDistancia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppGM.Core.ModeloEfecto", "Efecto")
                        .WithMany()
                        .HasForeignKey("IdEfecto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AppGM.Core.TIArmasDistanciaTiradaDeDaño", b =>
                {
                    b.HasOne("AppGM.Core.ModeloArmasDistancia", "ArmasDistancia")
                        .WithOne("TiradaDeDaño")
                        .HasForeignKey("AppGM.Core.TIArmasDistanciaTiradaDeDaño", "IdArmasDistancia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppGM.Core.ModeloTiradaDeDaño", "TiradaDaño")
                        .WithMany()
                        .HasForeignKey("IdTirada")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AppGM.Core.TIArmasDistanciaTiradaVariable", b =>
                {
                    b.HasOne("AppGM.Core.ModeloArmasDistancia", "ArmasDistancia")
                        .WithOne("TiradaRafaga")
                        .HasForeignKey("AppGM.Core.TIArmasDistanciaTiradaVariable", "IdArmasDistancia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppGM.Core.ModeloTiradaVariable", "TiradaVariable")
                        .WithMany()
                        .HasForeignKey("IdTirada")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AppGM.Core.TIEfectoModificadorDeStatBase", b =>
                {
                    b.HasOne("AppGM.Core.ModeloEfecto", "Efecto")
                        .WithMany("Modificaciones")
                        .HasForeignKey("IdEfecto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppGM.Core.ModeloModificadorDeStatBase", "Modificador")
                        .WithMany()
                        .HasForeignKey("IdModificadorDeStat")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AppGM.Core.TIHabilidadCargasHabilidad", b =>
                {
                    b.HasOne("AppGM.Core.ModeloCargasHabilidad", "ModeloCargasHabilidad")
                        .WithMany()
                        .HasForeignKey("IdCargasHabilidad")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppGM.Core.ModeloHabilidad", "Habilidad")
                        .WithOne("CargasHabilidad")
                        .HasForeignKey("AppGM.Core.TIHabilidadCargasHabilidad", "IdHabilidad")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AppGM.Core.TIHabilidadEfecto", b =>
                {
                    b.HasOne("AppGM.Core.ModeloEfecto", "Efecto")
                        .WithMany()
                        .HasForeignKey("IdEfecto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppGM.Core.ModeloHabilidad", "Habilidad")
                        .WithMany("EfectosSobreUsuarioEfectoSobreObjetivo")
                        .HasForeignKey("IdHabilidad")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AppGM.Core.TIHabilidadInvocacion", b =>
                {
                    b.HasOne("AppGM.Core.ModeloHabilidad", "Habilidad")
                        .WithMany("Invocacion")
                        .HasForeignKey("IdHabilidad")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppGM.Core.ModeloInvocacion", "Invocacion")
                        .WithMany()
                        .HasForeignKey("IdInvocacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AppGM.Core.TIHabilidadItem", b =>
                {
                    b.HasOne("AppGM.Core.ModeloHabilidad", "Habilidad")
                        .WithMany("ItemsQueCuestaItemInvocacion")
                        .HasForeignKey("IdHabilidad")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppGM.Core.ModeloItem", "Item")
                        .WithMany()
                        .HasForeignKey("IdItem")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AppGM.Core.TIHabilidadLimitador", b =>
                {
                    b.HasOne("AppGM.Core.ModeloHabilidad", "Habilidad")
                        .WithOne("LimiteDeUsos")
                        .HasForeignKey("AppGM.Core.TIHabilidadLimitador", "IdHabilidad")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppGM.Core.ModeloLimitador", "ModeloLimitador")
                        .WithMany()
                        .HasForeignKey("IdLimitador")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AppGM.Core.TIHabilidadTiradaBase", b =>
                {
                    b.HasOne("AppGM.Core.ModeloHabilidad", "Habilidad")
                        .WithMany("TiradasDeUso")
                        .HasForeignKey("IdHabilidad")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppGM.Core.ModeloTiradaBase", "TiradaBase")
                        .WithMany()
                        .HasForeignKey("IdTirada")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AppGM.Core.TIHabilidadTiradaDeDaño", b =>
                {
                    b.HasOne("AppGM.Core.ModeloHabilidad", "Habilidad")
                        .WithOne("TiradaDeDaño")
                        .HasForeignKey("AppGM.Core.TIHabilidadTiradaDeDaño", "IdHabilidad")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppGM.Core.ModeloTiradaDeDaño", "TiradaDeDaño")
                        .WithMany()
                        .HasForeignKey("IdTirada")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AppGM.Core.TIInvocacionEfecto", b =>
                {
                    b.HasOne("AppGM.Core.ModeloEfecto", "Efecto")
                        .WithMany()
                        .HasForeignKey("IdEfecto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppGM.Core.ModeloInvocacion", "Invocacion")
                        .WithOne("Efecto")
                        .HasForeignKey("AppGM.Core.TIInvocacionEfecto", "IdInvocacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AppGM.Core.TIInvocacionPersonaje", b =>
                {
                    b.HasOne("AppGM.Core.ModeloInvocacion", "Invocacion")
                        .WithOne("Invocador")
                        .HasForeignKey("AppGM.Core.TIInvocacionPersonaje", "IdInvocacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppGM.Core.ModeloPersonaje", "PersonajeInvocador")
                        .WithMany()
                        .HasForeignKey("IdPersonaje")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AppGM.Core.TIMapaUnidadMapa", b =>
                {
                    b.HasOne("AppGM.Core.ModeloMapa", "Mapa")
                        .WithMany("PosicionesUnidades")
                        .HasForeignKey("IdMapa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppGM.Core.ModeloUnidadMapa", "Unidad")
                        .WithMany()
                        .HasForeignKey("IdUnidadMapa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AppGM.Core.TIModificadorDeStatBaseTiradaBase", b =>
                {
                    b.HasOne("AppGM.Core.ModeloModificadorDeStatBase", "ModificadorDeStatBase")
                        .WithOne("ValorTirada")
                        .HasForeignKey("AppGM.Core.TIModificadorDeStatBaseTiradaBase", "IdModificadorDeStatBase")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppGM.Core.ModeloTiradaBase", "TiradaBase")
                        .WithMany()
                        .HasForeignKey("IdTirada")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AppGM.Core.TIOfensivoEfecto", b =>
                {
                    b.HasOne("AppGM.Core.ModeloEfecto", "Efecto")
                        .WithMany()
                        .HasForeignKey("IdEfecto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppGM.Core.ModeloOfensivo", "Ofensivo")
                        .WithOne("EfectoQueInflige")
                        .HasForeignKey("AppGM.Core.TIOfensivoEfecto", "IdOfensivo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AppGM.Core.TIOfensivoTiradaDeDaño", b =>
                {
                    b.HasOne("AppGM.Core.ModeloOfensivo", "Ofensivo")
                        .WithMany("TiradasDeDaño")
                        .HasForeignKey("IdOfensivo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppGM.Core.ModeloTiradaDeDaño", "TiradaDeDaño")
                        .WithMany()
                        .HasForeignKey("IdTiradaDeDaño")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AppGM.Core.TIParticipanteAccion", b =>
                {
                    b.HasOne("AppGM.Core.ModeloAccion", "Accion")
                        .WithMany()
                        .HasForeignKey("IdAccion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppGM.Core.ModeloParticipante", "Participante")
                        .WithMany("AccionesRealizadas")
                        .HasForeignKey("IdParticipante")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AppGM.Core.TIParticipantePersonaje", b =>
                {
                    b.HasOne("AppGM.Core.ModeloParticipante", "Participante")
                        .WithOne("Personaje")
                        .HasForeignKey("AppGM.Core.TIParticipantePersonaje", "IdParticipante")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppGM.Core.ModeloPersonaje", "Personaje")
                        .WithMany()
                        .HasForeignKey("IdPersonaje")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AppGM.Core.TIPersonajeArmaDistancia", b =>
                {
                    b.HasOne("AppGM.Core.ModeloArmasDistancia", "ArmaDistancia")
                        .WithMany()
                        .HasForeignKey("IdArmaDistancia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppGM.Core.ModeloPersonaje", "Personaje")
                        .WithMany("ArmasDistancia")
                        .HasForeignKey("IdPersonaje")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AppGM.Core.TIPersonajeDefensivo", b =>
                {
                    b.HasOne("AppGM.Core.ModeloDefensivo", "Defensivo")
                        .WithMany()
                        .HasForeignKey("IdDefensivo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppGM.Core.ModeloPersonaje", "Personaje")
                        .WithMany("Armadura")
                        .HasForeignKey("IdPersonaje")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AppGM.Core.TIPersonajeEfecto", b =>
                {
                    b.HasOne("AppGM.Core.ModeloEfecto", "Efecto")
                        .WithMany()
                        .HasForeignKey("IdEfecto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppGM.Core.ModeloPersonaje", "Personaje")
                        .WithMany("Efectos")
                        .HasForeignKey("IdPersonaje")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AppGM.Core.TIPersonajeHabilidad", b =>
                {
                    b.HasOne("AppGM.Core.ModeloHabilidad", "Habilidad")
                        .WithMany()
                        .HasForeignKey("IdHabilidad")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppGM.Core.ModeloPersonaje", "Personaje")
                        .WithMany("Skills")
                        .HasForeignKey("IdPersonaje")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AppGM.Core.TIPersonajeJugableCaracteristicas", b =>
                {
                    b.HasOne("AppGM.Core.ModeloCaracteristicas", "Caracteristicas")
                        .WithMany()
                        .HasForeignKey("IdCaracteristica")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppGM.Core.ModeloPersonajeJugable", "PersonajeJugable")
                        .WithOne("Caracteristicas")
                        .HasForeignKey("AppGM.Core.TIPersonajeJugableCaracteristicas", "IdPersonajeJugable")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AppGM.Core.TIPersonajeJugableInvocacion", b =>
                {
                    b.HasOne("AppGM.Core.ModeloInvocacion", "Invocacion")
                        .WithMany()
                        .HasForeignKey("IdInvocacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppGM.Core.ModeloPersonajeJugable", "PersonajeJugable")
                        .WithMany("Invocaciones")
                        .HasForeignKey("IdPersonajeJugable")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AppGM.Core.TIPersonajeMagia", b =>
                {
                    b.HasOne("AppGM.Core.ModeloMagia", "Magia")
                        .WithMany()
                        .HasForeignKey("IdMagia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppGM.Core.ModeloPersonaje", "Personaje")
                        .WithMany("Magias")
                        .HasForeignKey("IdPersonaje")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AppGM.Core.TIPersonajeModificadorDeDefensa", b =>
                {
                    b.HasOne("AppGM.Core.ModeloModificadorDeDefensa", "ModificadorDeDefensa")
                        .WithMany()
                        .HasForeignKey("IdModificadorDefensa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppGM.Core.ModeloPersonaje", "Personaje")
                        .WithMany("ModificadoresDeDefensa")
                        .HasForeignKey("IdPersonaje")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AppGM.Core.TIPersonajePerk", b =>
                {
                    b.HasOne("AppGM.Core.ModeloPerk", "Perk")
                        .WithMany()
                        .HasForeignKey("IdPerk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppGM.Core.ModeloPersonaje", "Personaje")
                        .WithMany("Perks")
                        .HasForeignKey("IdPersonaje")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AppGM.Core.TIPersonajePersonaje", b =>
                {
                    b.HasOne("AppGM.Core.ModeloPersonaje", "Aliado")
                        .WithMany()
                        .HasForeignKey("IdAliado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppGM.Core.ModeloPersonaje", "Personaje")
                        .WithMany("Aliados")
                        .HasForeignKey("IdPersonaje")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AppGM.Core.TIPersonajeUnidadMapa", b =>
                {
                    b.HasOne("AppGM.Core.ModeloPersonaje", "Personaje")
                        .WithMany()
                        .HasForeignKey("IdPersonaje")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppGM.Core.ModeloUnidadMapa", "Unidad")
                        .WithOne("Personaje")
                        .HasForeignKey("AppGM.Core.TIPersonajeUnidadMapa", "IdUnidadMapa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AppGM.Core.TIPersonajeUtilizable", b =>
                {
                    b.HasOne("AppGM.Core.ModeloPersonaje", "Personaje")
                        .WithMany("Inventario")
                        .HasForeignKey("IdPersonaje")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppGM.Core.ModeloUtilizable", "Utilizable")
                        .WithMany()
                        .HasForeignKey("IdUtilizable")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AppGM.Core.TIPortableModificadorDeStatBase", b =>
                {
                    b.HasOne("AppGM.Core.ModeloModificadorDeStatBase", "Modificador")
                        .WithMany()
                        .HasForeignKey("IdModificadorDeStat")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppGM.Core.ModeloPortable", "Portable")
                        .WithMany("VentajasYDesventajasDeEquiparlo")
                        .HasForeignKey("IdPortable")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AppGM.Core.TIPortableSlots", b =>
                {
                    b.HasOne("AppGM.Core.ModeloPortable", "Portable")
                        .WithMany("Slots")
                        .HasForeignKey("IdPortable")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppGM.Core.ModeloSlot", "Slot")
                        .WithMany()
                        .HasForeignKey("IdSlot")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AppGM.Core.TIServantNoblePhantasm", b =>
                {
                    b.HasOne("AppGM.Core.ModeloNoblePhantasm", "NoblePhantasm")
                        .WithMany()
                        .HasForeignKey("IdNoblePhantasm")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppGM.Core.ModeloServant", "Servant")
                        .WithMany("NoblePhantasms")
                        .HasForeignKey("IdServant")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AppGM.Core.TISlotItem", b =>
                {
                    b.HasOne("AppGM.Core.ModeloItem", "Item")
                        .WithMany()
                        .HasForeignKey("IdItem")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppGM.Core.ModeloSlot", "Slot")
                        .WithMany("ItemsAlmacenados")
                        .HasForeignKey("IdSlot")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AppGM.Core.TIUnidadMapaVector2", b =>
                {
                    b.HasOne("AppGM.Core.ModeloUnidadMapa", "Unidad")
                        .WithOne("Posicion")
                        .HasForeignKey("AppGM.Core.TIUnidadMapaVector2", "IdUnidadMapa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppGM.Core.ModeloVector2", "Posicion")
                        .WithMany()
                        .HasForeignKey("IdVector")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AppGM.Core.TIUtilizableEfecto", b =>
                {
                    b.HasOne("AppGM.Core.ModeloEfecto", "Efecto")
                        .WithMany()
                        .HasForeignKey("IdEfecto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppGM.Core.ModeloUtilizable", "Utilizable")
                        .WithMany("EfectoSobreUsuarioYObjetivo")
                        .HasForeignKey("IdUtilizable")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AppGM.Core.TIUtilizableModificadorDeStatBase", b =>
                {
                    b.HasOne("AppGM.Core.ModeloModificadorDeStatBase", "ModificadorDeStatBase")
                        .WithMany()
                        .HasForeignKey("IdModificadorStatBase")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppGM.Core.ModeloUtilizable", "Utilizable")
                        .WithOne("VentajaAlUtilizarlo")
                        .HasForeignKey("AppGM.Core.TIUtilizableModificadorDeStatBase", "IdUtilizable")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AppGM.Core.TIUtilizableTiradaBase", b =>
                {
                    b.HasOne("AppGM.Core.ModeloTiradaBase", "TiradaBase")
                        .WithMany()
                        .HasForeignKey("IdTirada")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppGM.Core.ModeloUtilizable", "Utilizable")
                        .WithOne("TiradaDeUso")
                        .HasForeignKey("AppGM.Core.TIUtilizableTiradaBase", "IdUtilizable")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
